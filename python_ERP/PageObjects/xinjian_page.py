import time
from python_ERP.Common.BasePage import BasePage
from python_ERP.PageLocators.xinjian_page_locators import SetPageLocator as loc
from selenium.webdriver.common.action_chains import ActionChains
from python_ERP.TestDatas.set_data import *
import logging
from python_ERP.PageObjects.chaxun_money import SkuChaxun
import random
from python_ERP.TestDatas.set_data import *

class NewPage(BasePage):
    #UAS = ['Amazon',random.randint(100000,1000000),'许寿龙','United States(美国US)',
          # 'Kansas','555 Lexington Avenue, 10th Floor, Room 202','92647']
    #1,平台   2，订单号，买家ID
    #3、收件人  4、国家  5，州  6、街道   7、邮编

    def new_order(self,mode):
        information = UAS
        information[1]=str(random.randint(10000000,10000000000))
        logging.info("随机到的数据：{0}".format(information))
        logging.info('新建订单')
        # self.wait_eleVisible(loc.choose_platform,model=nama)
        # 选择平台
        platform= random.choice(['11street','Amazon','eBay'])
        self.select(loc.choose_platform,platform,model='平台选择')
        #输入订单号
        id=information[1]
        #选择货币
        self.select(loc.choose_currency,'VND',model='货币选择')
        #选择物流方式
        self.select(loc.choose_logistics,'4PX物流-新加坡挂号')
        time.sleep(0.5)
        # 选择日期
        self.click_element(loc.choose_data,model='日期选择')
        self.switchover_html(0)
        self.click_element(loc.data_affirm,model='日期确认')
        self.driver.switch_to.default_content()
        time.sleep(1)
        #订购商品信息填写

        if mode=='按货打单':
            logging.info('订单号{0}'.format(id+'anh'))
            self.input_text(loc.order_input, id+'anh', model='输入平台订单号')
            time.sleep(1)
            self.click_element(loc.choose,model='选择添加商品')
            time.sleep(7)
            self.switchover_html(1)
            self.select(loc.status,'正常',model='筛选订单正常')
            self.select(loc.up_down,'上架',model='筛选订单上架')
            time.sleep(0.5)
            information_cku = random.choice(['大浪仓库', '石岩仓库', '中泰仓库', '塘厦仓库'])
            self.select(loc.warehouse,information_cku,model='选择仓库')
            self.input_text(loc.kucun1,'100',model='库存1输入')
            self.input_text(loc.kucun2,'1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton,model='点击搜索按钮')
            time.sleep(15)
            s=random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text
            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity,1,model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money =SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price,money,model='输入多少钱')
            time.sleep(1)
            self.input_text(loc.buyer_ID, id+'anh', model='输入买家ID')
            self.input_text(loc.recipients,information[2], model='输入收件人')
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model='输入邮箱')
            self.input_text(loc.choose_province, information[4], model='输入州')
            self.input_text(loc.choose_street, information[5], model='输入街道')
            self.input_text(loc.choose_code, information[-1], model='输入邮编')
            self.input_text(loc.tel, '285-3600', model='输入电话')
            self.select(loc.choose_state, information[3], model='选择国家')
            time.sleep(2)
            self.click_element(loc.put_button, model='点击创建按钮')
            return id+'anh'
        elif mode=='按框打单':
            logging.info('按框打单')
            logging.info('订单号{0}'.format(id + 'ank'))
            self.input_text(loc.order_input, id +'ank', model='输入平台订单号')
            time.sleep(1)
            self.click_element(loc.choose, model='选择添加商品')
            time.sleep(7)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选订单正常')
            self.select(loc.up_down, '上架', model='筛选订单上架')
            time.sleep(0.5)
            information_cku = random.choice(['大浪仓库', '石岩仓库', '中泰仓库', '塘厦仓库'])
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='库存1输入')
            self.input_text(loc.kucun2, '1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            s = random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text
            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity, 2, model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price, money, model='输入多少钱')
            time.sleep(1)
            self.input_text(loc.buyer_ID, id + 'ank', model='输入买家ID')
            self.input_text(loc.recipients, information[2], model='输入收件人')
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model='输入邮箱')
            self.input_text(loc.choose_province, information[4], model='输入州')
            self.input_text(loc.choose_street, information[5], model='输入街道')
            self.input_text(loc.choose_code, information[-1], model='输入邮编')
            self.input_text(loc.tel, '285-3600', model='输入电话')
            self.select(loc.choose_state, information[3], model='选择国家')
            time.sleep(2)
            self.click_element(loc.put_button, model='点击创建按钮')
            return id + 'ank'
        elif mode=='多品打单':
            logging.info('多品打单')
            logging.info('订单号{0}'.format(id + 'duop'))
            self.input_text(loc.order_input, id + 'duop', model='输入平台订单号')
            time.sleep(1)
            self.click_element(loc.choose, model='选择添加商品')
            time.sleep(7)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选订单正常')
            self.select(loc.up_down, '上架', model='筛选订单上架')
            time.sleep(0.5)
            information_cku = random.choice(['大浪仓库', '石岩仓库', '中泰仓库', '塘厦仓库'])
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='库存1输入')
            self.input_text(loc.kucun2, '1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            s = random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text
            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity, 1, model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price, money, model='输入多少钱')
            time.sleep(1)

            logging.info('第二个商品添加~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
            self.click_element(loc.add_goods, model='添加第二个商品')
            self.click_element(loc.choose2, model='选择添加商品')
            time.sleep(5)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选订单正常')
            self.select(loc.up_down, '上架', model='筛选订单上架')
            time.sleep(0.5)
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='库存1输入')
            self.input_text(loc.kucun2, '1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            # s = random.randrange(1, 10)
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s+1))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s+1)).text

            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity2, 1, model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price2, money, model='输入多少钱')
            time.sleep(1)
            self.input_text(loc.buyer_ID, id + 'duop', model='输入买家ID')
            self.input_text(loc.recipients, information[2], model='输入收件人')
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model='输入邮箱')
            self.input_text(loc.choose_province, information[4], model='输入州')
            self.input_text(loc.choose_street, information[5], model='输入街道')
            self.input_text(loc.choose_code,information[-1], model='输入邮编')
            self.input_text(loc.tel, '285-3600', model='输入电话')
            self.select(loc.choose_state, information[3], model='选择国家')
            time.sleep(2)
            self.click_element(loc.put_button, model='点击创建按钮')
            return id + 'duop'
        elif mode == '核对打单':
            logging.info('订单号{0}'.format(id + 'hedui'))
            self.input_text(loc.order_input, id + 'hedui', model='输入平台订单号')
            time.sleep(1)
            self.click_element(loc.choose, model='选择添加商品')
            time.sleep(7)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选订单正常')
            self.select(loc.up_down, '上架', model='筛选订单上架')
            time.sleep(0.5)
            information_cku = random.choice(['大浪仓库', '石岩仓库', '中泰仓库', '塘厦仓库'])
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='库存1输入')
            self.input_text(loc.kucun2, '1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            s = random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text
            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity, 1, model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price, money, model='输入多少钱')
            time.sleep(1)
            self.input_text(loc.buyer_ID, id + 'hedui', model='输入买家ID')
            self.input_text(loc.recipients, information[2], model='输入收件人')
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model='输入邮箱')
            self.input_text(loc.choose_province,information[4], model='输入州')
            self.input_text(loc.choose_street, information[5], model='输入街道')
            self.input_text(loc.choose_code, information[-1], model='输入邮编')
            self.input_text(loc.tel, '285-3600', model='输入电话')
            self.select(loc.choose_state, information[3], model='选择国家')
            time.sleep(2)
            self.click_element(loc.put_button, model='点击创建按钮')
            return id + 'hedui'
        elif mode=='多仓打单':
            logging.info('订单号{0}'.format(id + 'duocang'))
            logging.info('多仓打单')
            self.input_text(loc.order_input, id + 'duocang', model='输入平台订单号')
            time.sleep(1)
            self.click_element(loc.add_goods,model='添加商品')
            time.sleep(0.5)
            self.click_element(loc.choose, model='选择第一个')
            time.sleep(5)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选为正常')
            self.select(loc.up_down, '上架', model='筛选为上架')
            time.sleep(0.5)
            information_cku = random.choice(['中泰仓库', '塘厦仓库'])
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='输入最小库存')
            self.input_text(loc.kucun2, '1000', model='输入最大库存')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            s = random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text

            self.driver.switch_to.default_content()
            self.click_element(loc.ok_button, model='确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity, 1, model='输入数量')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price, money, model='输入金额')

            logging.info('第二个商品添加~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
            self.click_element(loc.choose2, model='选择第二个商品')
            time.sleep(5)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选是否为正常')
            self.select(loc.up_down, '上架', model='筛选是否为上架')
            time.sleep(0.5)
            information2 = random.choice([ '大浪仓库', '石岩仓库'])
            self.select(loc.warehouse, information2, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='输入最小库存')
            self.input_text(loc.kucun2, '1000', model='输入最大库存')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            # s = random.randrange(1, 10)
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s+1))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s+1)).text

            self.driver.switch_to.default_content()
            self.click_element(loc.ok_button, model='确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity2, 1, model='输入数量2')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price2, money, model='输入金额2')
            time.sleep(1)
            self.input_text(loc.buyer_ID, id + 'duocang', model='输入买家ID')
            self.input_text(loc.recipients, information[2], model='输入收件人')
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model='输入邮箱')
            self.input_text(loc.choose_province, information[4], model='输入州')
            self.input_text(loc.choose_street,information[5], model='输入街道')
            self.input_text(loc.choose_code, information[-1], model='输入编码')
            self.input_text(loc.tel, '285-3600', model='输入电话')
            self.select(loc.choose_state, information[3], model='输入国家')
            time.sleep(2)
            self.click_element(loc.put_button, model='点击确认按钮')
            return id + 'duocang'


    def new_order_qx(self,platform,mode):
        information = UAS
        information[1] = str(random.randint(10000000, 10000000000))
        logging.info("随机到的数据：{0}".format(information))
        logging.info('新建订单')
        self.select(loc.choose_platform, platform, model='平台选择')
        # 输入订单号
        id = information[1]
        # 选择货币
        self.select(loc.choose_currency, 'VND', model='货币选择')
        # 选择物流方式
        self.select(loc.choose_logistics, '4PX物流-新加坡挂号')
        time.sleep(0.5)
        # 选择日期
        self.select(loc.seller,'cn1521209980hxzg',model='选择卖家账号')
        self.click_element(loc.choose_data, model='日期选择')
        self.switchover_html(0)
        self.click_element(loc.data_affirm, model='日期确认')
        self.driver.switch_to.default_content()
        time.sleep(1)
        # 订购商品信息填写

        if mode == '按货打单':
            logging.info('订单号{0}'.format(id + 'anh'+'qx'))
            self.input_text(loc.order_input, id + 'anh'+'qx', model='输入平台订单号')
            time.sleep(1)
            self.click_element(loc.choose, model='选择添加商品')
            time.sleep(7)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选订单正常')
            self.select(loc.up_down, '上架', model='筛选订单上架')
            time.sleep(0.5)
            information_cku = random.choice(['大浪仓库', '石岩仓库', '中泰仓库', '塘厦仓库'])
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='库存1输入')
            self.input_text(loc.kucun2, '1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            s = random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text
            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity, 1, model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price, money, model='输入多少钱')
            time.sleep(1)
            self.input_text(loc.buyer_ID, id + 'anh'+'qx', model='输入买家ID')
            self.input_text(loc.recipients, information[2], model='输入收件人')
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model='输入邮箱')
            self.input_text(loc.choose_province, information[4], model='输入州')
            self.input_text(loc.choose_street, information[5], model='输入街道')
            self.input_text(loc.choose_code, information[-1], model='输入邮编')
            self.input_text(loc.tel, '285-3600', model='输入电话')
            self.select(loc.choose_state, information[3], model='选择国家')
            time.sleep(2)
            self.click_element(loc.put_button, model='点击创建按钮')
            return id + 'anh'+'qx'
        elif mode == '按框打单':
            logging.info('按框打单')
            logging.info('订单号{0}'.format(id + 'ank'+'qx'))
            self.input_text(loc.order_input, id + 'ank'+'qx', model='输入平台订单号')
            time.sleep(1)
            self.click_element(loc.choose, model='选择添加商品')
            time.sleep(7)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选订单正常')
            self.select(loc.up_down, '上架', model='筛选订单上架')
            time.sleep(0.5)
            information_cku = random.choice(['大浪仓库', '石岩仓库', '中泰仓库', '塘厦仓库'])
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='库存1输入')
            self.input_text(loc.kucun2, '1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            s = random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text
            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity, 2, model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price, money, model='输入多少钱')
            time.sleep(1)
            self.input_text(loc.buyer_ID, id + 'ank'+'qx', model='输入买家ID')
            self.input_text(loc.recipients, information[2], model='输入收件人')
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model='输入邮箱')
            self.input_text(loc.choose_province, information[4], model='输入州')
            self.input_text(loc.choose_street, information[5], model='输入街道')
            self.input_text(loc.choose_code, information[-1], model='输入邮编')
            self.input_text(loc.tel, '285-3600', model='输入电话')
            self.select(loc.choose_state, information[3], model='选择国家')
            time.sleep(2)
            self.click_element(loc.put_button, model='点击创建按钮')
            return id + 'ank'+'qx'
        elif mode == '多品打单':
            logging.info('多品打单')
            logging.info('订单号{0}'.format(id + 'duop'+'qx'))
            self.input_text(loc.order_input, id + 'duop'+'qx', model='输入平台订单号')
            time.sleep(1)
            self.click_element(loc.choose, model='选择添加商品')
            time.sleep(7)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选订单正常')
            self.select(loc.up_down, '上架', model='筛选订单上架')
            time.sleep(0.5)
            information_cku = random.choice(['大浪仓库', '石岩仓库', '中泰仓库', '塘厦仓库'])
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='库存1输入')
            self.input_text(loc.kucun2, '1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            s = random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text
            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity, 1, model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price, money, model='输入多少钱')
            time.sleep(1)

            logging.info('第二个商品添加~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
            self.click_element(loc.add_goods, model='添加第二个商品')
            self.click_element(loc.choose2, model='选择添加商品')
            time.sleep(5)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选订单正常')
            self.select(loc.up_down, '上架', model='筛选订单上架')
            time.sleep(0.5)
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='库存1输入')
            self.input_text(loc.kucun2, '1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            # s = random.randrange(1, 10)
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s + 1))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s + 1)).text

            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity2, 1, model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price2, money, model='输入多少钱')
            time.sleep(1)
            self.input_text(loc.buyer_ID, id + 'duop'+'qx', model='输入买家ID')
            self.input_text(loc.recipients, information[2], model='输入收件人')
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model='输入邮箱')
            self.input_text(loc.choose_province, information[4], model='输入州')
            self.input_text(loc.choose_street, information[5], model='输入街道')
            self.input_text(loc.choose_code, information[-1], model='输入邮编')
            self.input_text(loc.tel, '285-3600', model='输入电话')
            self.select(loc.choose_state, information[3], model='选择国家')
            time.sleep(2)
            self.click_element(loc.put_button, model='点击创建按钮')
            return id + 'duop'+'qx'
        elif mode == '核对打单':
            logging.info('订单号{0}'.format(id + 'hedui'+'qx'))
            self.input_text(loc.order_input, id + 'hedui'+'qx', model='输入平台订单号')
            time.sleep(1)
            self.click_element(loc.choose, model='选择添加商品')
            time.sleep(7)
            self.switchover_html(1)
            self.select(loc.status, '正常', model='筛选订单正常')
            self.select(loc.up_down, '上架', model='筛选订单上架')
            time.sleep(0.5)
            information_cku = random.choice(['大浪仓库', '石岩仓库', '中泰仓库', '塘厦仓库'])
            self.select(loc.warehouse, information_cku, model='选择仓库')
            self.input_text(loc.kucun1, '100', model='库存1输入')
            self.input_text(loc.kucun2, '1000', model='库存2输入')
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model='点击搜索按钮')
            time.sleep(15)
            s = random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text
            self.driver.switch_to.default_content()
            time.sleep(1)
            self.click_element(loc.ok_button, model='点击确认按钮')
            time.sleep(1)
            self.input_text(loc.quantity, 1, model='数量输入')
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price, money, model='输入多少钱')
            time.sleep(1)
            self.input_text(loc.buyer_ID, id + 'hedui'+'qx', model='输入买家ID')
            self.input_text(loc.recipients, information[2], model='输入收件人')
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model='输入邮箱')
            self.input_text(loc.choose_province, information[4], model='输入州')
            self.input_text(loc.choose_street, information[5], model='输入街道')
            self.input_text(loc.choose_code, information[-1], model='输入邮编')
            self.input_text(loc.tel, '285-3600', model='输入电话')
            self.select(loc.choose_state, information[3], model='选择国家')
            time.sleep(2)
            self.click_element(loc.put_button, model='点击创建按钮')
            return id + 'hedui'+'qx'
        elif mode=='多仓打单':
            nama = '多仓打单'
            logging.info('订单号{0}'.format(id + 'duocang'+ 'qx'))
            # if "qx" in mode:
            self.input_text(loc.order_input, id + 'duocang' + 'qx', model=nama)
            # else:
            #     self.input_text(loc.order_input, id + 'duocang', model=nama)
            time.sleep(1)
            self.click_element(loc.add_goods,model=nama)
            time.sleep(0.5)
            self.click_element(loc.choose, model=nama)
            time.sleep(5)
            self.switchover_html(1)
            self.select(loc.status, '正常', model=nama)
            self.select(loc.up_down, '上架', model=nama)
            time.sleep(0.5)
            information_cku = '塘厦仓库'
            self.select(loc.warehouse, information_cku, model=nama)
            self.input_text(loc.kucun1, '100', model=nama)
            self.input_text(loc.kucun2, '1000', model=nama)
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model=nama)
            time.sleep(15)
            s = random.randrange(2, 10)
            logging.info('选择的SKU是{0}'.format(s))
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s)).text

            self.driver.switch_to.default_content()
            self.click_element(loc.ok_button, model=nama)
            time.sleep(1)
            self.input_text(loc.quantity, 1, model=nama)
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price, money, model=nama)

            logging.info('第二个商品添加~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
            self.click_element(loc.choose2, model=nama)
            time.sleep(5)
            self.switchover_html(1)
            self.select(loc.status, '正常', model=nama)
            self.select(loc.up_down, '上架', model=nama)
            time.sleep(0.5)
            information2 = random.choice([ '大浪仓库', '石岩仓库'])
            self.select(loc.warehouse, information2, model=nama)
            self.input_text(loc.kucun1, '100', model=nama)
            self.input_text(loc.kucun2, '1000', model=nama)
            time.sleep(0.5)
            self.click_element(loc.seek_buton, model=nama)
            time.sleep(15)
            # s = random.randrange(1, 10)
            ele_2 = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]'.format(s+1))
            ActionChains(self.driver).click(ele_2).perform()
            sku = self.driver.find_element_by_xpath('//*[@id="product-list"]//tr[{0}]//td[3]//dt'.format(s+1)).text

            self.driver.switch_to.default_content()
            self.click_element(loc.ok_button, model=nama)
            time.sleep(1)
            self.input_text(loc.quantity2, 1, model=nama)
            time.sleep(1)
            # self.driver.switch_to.window(0)
            money = SkuChaxun(self.driver).money(sku)
            self.input_text(loc.unit_price2, money, model=nama)
            time.sleep(1)
            self.input_text(loc.buyer_ID, id + 'duocang', model=nama)
            self.input_text(loc.recipients, information[2], model=nama)
            self.input_text(loc.Email_input, 'ynin2gjs6tr@thrubay.com', model=nama)
            self.input_text(loc.choose_province, information[4], model=nama)
            self.input_text(loc.choose_street,information[5], model=nama)
            self.input_text(loc.choose_code, information[-1], model=nama)
            self.input_text(loc.tel, '285-3600', model=nama)
            self.select(loc.choose_state, information[3], model=nama)
            time.sleep(2)
            self.click_element(loc.put_button, model=nama)
            return id + 'duocang'+ 'qx'